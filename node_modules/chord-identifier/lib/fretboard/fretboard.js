"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNoteFromFret = exports.guitarTunings = exports.TuningName = void 0;
const music_1 = require("../music");
var TuningName;
(function (TuningName) {
    TuningName[TuningName["Standard"] = 0] = "Standard";
    TuningName[TuningName["Drop_D"] = 1] = "Drop_D";
    TuningName[TuningName["Double_Drop_D"] = 2] = "Double_Drop_D";
    TuningName[TuningName["Open_G"] = 3] = "Open_G";
})(TuningName = exports.TuningName || (exports.TuningName = {}));
exports.guitarTunings = () => {
    const { C, Cs, D, Ds, E, F, Fs, G, Gs, A, As, B } = music_1.Pitch;
    const { Standard, Drop_D, Double_Drop_D, Open_G } = TuningName;
    const D2 = new music_1.Note(D, 2);
    const E2 = new music_1.Note(E, 2);
    const G2 = new music_1.Note(G, 2);
    const A2 = new music_1.Note(A, 2);
    const D3 = new music_1.Note(D, 3);
    const G3 = new music_1.Note(G, 3);
    const B3 = new music_1.Note(B, 3);
    const D4 = new music_1.Note(D, 4);
    const E4 = new music_1.Note(E, 4);
    return new Map([
        [Standard, [E2, A2, D3, G3, B3, E4]],
        [Drop_D, [D2, A2, D3, G3, B3, E4]],
        [Double_Drop_D, [D2, A2, D3, G3, B3, E4]],
        [Open_G, [D2, G2, D3, G3, B3, D4]],
    ]);
};
exports.getNoteFromFret = (string, fret, tuningOffset = 0) => {
    let resultantPitch = string.pitch + fret + tuningOffset;
    if (resultantPitch < 0)
        resultantPitch += 12;
    const octaveOffest = Math.floor(resultantPitch / 12);
    const actualPitch = (resultantPitch % 12);
    const newOctave = (string.octave + octaveOffest);
    return new music_1.Note(actualPitch, newOctave);
};
